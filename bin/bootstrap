#!/usr/bin/env bash
BASEDIR=`dirname $0`/..
. "${BASEDIR}/lib/env.sh"
. "${BASEDIR}/lib/generate_passphrase.sh"
set -e

bucc_repository="https://github.com/starkandwayne/bucc.git"
bucc_dir=${work_dir}/bucc

ip_base=$(echo ${bootstrap_cidr} | awk -F. '{print $1 "." $2 "." $3}')
gateway_ip="${ip_base}.1"
internal_ip="${ip_base}.6"

prepare () {
  eval "$(op signin my)"
  if [ ! -d "${bucc_dir}" ] ; then
    git clone ${bucc_repository} ${bucc_dir}
    git checkout develop
    populate_vars_file
  else
    pushd ${bucc_dir}
      git fetch
      git checkout develop
      git pull
      populate_vars_file
    popd
  fi
}

populate_vars_file () {
  vcenter_password="$(op get item xrfzecwzyfg7volpoq7yuhaxtm | jq -r '.details.password')"

  cat  <<VARS > ${bucc_dir}/vars.yml
director_name: bucc-${env_id}
internal_cidr: ${bootstrap_cidr}
internal_gw: ${gateway_ip}
internal_ip: ${internal_ip}
network_name: ${bootstrap_network}
vcenter_cluster: ${vcenter_cluster}
vcenter_dc: ${vcenter_data_center}
vcenter_disks: bucc-${env_id}-disks
vcenter_ds: ${vcenter_fast_datastore}
vcenter_ip: ${vcenter_host}
vcenter_password: ${vcenter_password}
vcenter_templates: bucc-${env_id}-templates
vcenter_user: ${bucc_service_account}
vcenter_vms: bucc-${env_id}-templates

# flag: --dns
vcenter_dns: ${dns_servers_array}

# flag: --resource-pool
vcenter_rp: # my-bosh-rp
VARS
}

up () {
  old_path=${PATH}
  PATH=${bucc_dir}/bin:${PATH}
  pushd ${bucc_dir}
    bucc up --cpi vsphere
  popd
  PATH=${old_path}
}

down () {
  old_path=${PATH}
  PATH=${bucc_dir}/bin:${PATH}
  pushd ${bucc_dir}
    bucc down
  popd
  PATH=${old_path}
}

integrate () {
  bosh -e ${env_id} -d ${concourse_deployment} manifest > work/concourse.yml
  bosh -e ${env_id} -d ${concourse_deployment}
}

cleanup () {
  old_path=${PATH}
  PATH=${bucc_dir}/bin:${PATH}
  pushd ${bucc_dir}
    bucc clean
  popd
  rm -rf ${bucc_dir}
  PATH=${old_path}
}

url () {
  ip_base=$(echo ${bootstrap_cidr} | awk -F. '{print $1 "." $2 "." $3}')
  gateway_ip="${ip_base}.1"
  internal_ip="${ip_base}.6"
  echo https://${internal_ip}
}

cert () {
  echo "$(bosh int ${bucc_dir}/state/creds.yml --path /default_ca/certificate)"
}

password () {
  local option=$1
  if [ $option == "concourse" ] ; then
    echo "$(bosh int ${bucc_dir}/state/creds.yml --path /ui_password)"
  fi
  if [ $option == "bosh" ] ; then
    echo "$(bosh int ${bucc_dir}/state/creds.yml --path /admin_password)"
  fi
}

if [ $# -gt 0 ]; then
  while [ $# -gt 0 ]; do
    case $1 in
      prepare )
        prepare
        ;;
      up )
        up
        ;;
      down )
        down
        ;;
      cleanup )
        cleanup
        ;;
      url )
        url
        ;;
      cert )
        cert
        ;;
      password )
        option=${2}
        shift;
        password ${option}
        ;;
      * )
        echo "Unrecognized option: $1" 1>&2
        exit 1
        ;;
    esac
    shift
    exit
  done
fi

prepare
up
