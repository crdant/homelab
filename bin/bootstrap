#!/usr/bin/env bash
BASEDIR=`dirname $0`/..
. "${BASEDIR}/lib/env.sh"
. "${BASEDIR}/lib/generate_passphrase.sh"
. "${BASEDIR}/lib/terraform.sh"
set -e

environment () {
  source_json="$(outputs pave)"

  export BBL_IAAS=${iaas}
  export BBL_VSPHERE_VCENTER_USER="$(echo "$source_json" | jq -r .bbl_user.value )"
  export BBL_VSPHERE_VCENTER_PASSWORD="$(echo "$source_json" | jq -r .bbl_password.value )"
  export BBL_VSPHERE_VCENTER_IP="$(echo "$source_json" | jq -r .vcenter_fqdn.value )"
  export BBL_VSPHERE_VCENTER_DC="$(echo "$source_json" | jq -r .bbl_datacenter.value )"
  export BBL_VSPHERE_VCENTER_CLUSTER="$(echo "$source_json" | jq -r .bbl_cluster.value )"
  export BBL_VSPHERE_VCENTER_RP="$(echo "$source_json" | jq -r .bbl_resource_pool.value )"
  export BBL_VSPHERE_NETWORK="$(echo "$source_json" | jq -r .bootstrap_network.value )"
  export BBL_VSPHERE_VCENTER_DS="$(echo "$source_json" | jq -r .bbl_datastore.value )"
  export BBL_VSPHERE_SUBNET="$(echo "$source_json" | jq -r .bootstrap_cidr.value )"
  export BBL_VSPHERE_VCENTER_DISKS
  export BBL_VSPHERE_VCENTER_TEMPLATES
  export BBL_VSPHERE_VCENTER_VMS
}

up () {
  environment
  bbl up --debug --state-dir ${state_dir}
}

login() {
  eval "$(bbl print-env)"
  export BOSH_ENVIRONMENT=$(bbl director-address)
  bosh alias-env $(bbl env-id)
  bosh log-in
}

down () {
  environment
  bbl down --state-dir ${state_dir}
}

if [ $# -gt 0 ]; then
  while [ $# -gt 0 ]; do
    case $1 in
      prepare )
        prepare
        ;;
      up )
        up
        ;;
      login )
        login
        ;;
      down )
        down
        ;;
      * )
        echo "Unrecognized option: $1" 1>&2
        exit 1
        ;;
    esac
    shift
    exit
  done
fi


up
login
