#!/usr/bin/env bash
BASEDIR=`dirname $0`/..
. "${BASEDIR}/lib/env.sh"
. "${BASEDIR}/lib/generate_passphrase.sh"
set -e

directories() {
  if [ ! -d ${work_dir} ] ; then
    mkdir -p ${work_dir}
  fi

  if [ ! -d ${key_dir} ] ; then
    mkdir -p ${key_dir}
  fi

  if [ ! -d ${state_dir} ] ; then
    mkdir -p ${state_dir}
  fi
}

service_account () {
  if [ ! -f "${key_file}" ] ; then
    # create an account for preparing the environment
    gcloud iam service-accounts create ${service_account_name} --no-user-output-enabled
    gcloud iam service-accounts keys create --iam-account="${service_account}" ${key_file} --no-user-output-enabled
    gcloud projects add-iam-policy-binding ${project} --member="serviceAccount:${service_account}" --role="roles/editor" --no-user-output-enabled
    gcloud projects add-iam-policy-binding ${project} --member="serviceAccount:${service_account}" --role="roles/viewer" --no-user-output-enabled
  fi
}

encryption () {
  gcloud kms keyrings create homelab --location ${region}
  gcloud kms keys create ${statefile_bucket} --keyring homelab --purpose encryption --location ${region}
  gsutil kms encryption -k projects/${project}/locations/${region}/keyRings/homelab/cryptoKeys/${statefile_bucket} gs://${statefile_bucket}
}

cloud_storage () {
  gsutil mb -c regional -l ${region} gs://${statefile_bucket}
  gsutil versioning set on gs://${statefile_bucket}
}

trust() {
  # golang commands don't love Let's Encrypt
  wget -O ${ca_cert_file} https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem.txt
}

secrets () {
  read -sp "Enter your ESXi Password: " vsphere_password
  security add-generic-password -a root -s ${vsphere_host} -p ${vsphere_password} -U iCloud
  echo ""

  read -p "Enter your ESXi Licesnse Key: " vsphere_license
  security add-generic-password -a license_key -s ${vsphere_host} -p ${vsphere_license} -U iCloud
  echo ""

  read -p "Enter your vCenter Licesnse Key: " vcenter_license
  security add-generic-password -a license_key -s ${vcenter_host} -p ${vcenter_license} -U iCloud
  echo ""

  read -p "Enter the Github Client ID for concourse: " concourse_client
  security add-generic-password -a "Concourse Client" -s github.com -p ${concourse_client} -U iCloud
  echo ""

  read -p "Enter the Github Client Secret for concourse: " concourse_client_secret
  security add-generic-password -a "Concourse Secret" -s github.com -p ${concourse_client_secret} -U iCloud
  echo ""

  read -p "Enter the Github Token for concourse to acccess private repos: " concourse_github_token
  security add-generic-password -a "Concourse Token" -s github.com -p ${concourse_github_token} -U iCloud
  echo ""
}

if [ $# -gt 0 ]; then
  while [ $# -gt 0 ]; do
    case $1 in
      directories )
        directories
        ;;
      account | service_account )
        service_account
        ;;
      storage | cloud_storage )
        cloud_storage
        ;;
      encryption )
        encryption
        ;;
      trust )
        trust
        ;;
      secrets)
        secrets
        ;;
      * )
        echo "Unrecognized option: $1" 1>&2
        exit 1
        ;;
    esac
    shift
  done
  exit
fi

directories
service_account
cloud_storage
encryption
trust
secrets
