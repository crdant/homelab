#!/usr/bin/env bash
BASEDIR=`dirname $0`/..
. "${BASEDIR}/lib/env.sh"
. "${BASEDIR}/lib/generate_passphrase.sh"
. "${BASEDIR}/lib/terraform.sh"
set -e

router_password="$(security find-generic-password -a ubnt -s ${router_host}.${domain} -w)"

terraform_vars () {
  dns_servers_json=$(printf '%s\n' "${dns_servers[@]}" | jq -R . | jq -s .)
  ntp_servers_json=$(printf '%s\n' "${ntp_servers[@]}" | jq -R . | jq -s .)
  vpn_users_json=$(printf '%s\n' "${vpn_users[@]}" | jq -R . | jq -s .)

  jq_query=$(jq -n \
    --argjson dns_servers "$dns_servers_json" \
    --argjson ntp_servers "$ntp_servers_json" \
    --argjson vpn_users "$vpn_users_json" \
    --arg current_router_password "${router_password}" \
    'env + {
      dns_servers: $dns_servers,
      ntp_servers: $ntp_servers,
      vpn_users: $vpn_users,
      current_router_password: $current_router_password
    }'
  )

  env -i BASEDIR="${BASEDIR}" \
    jq_query="${jq_query}" \
    bash -c 'set -a ; . "${BASEDIR}/lib/env.sh" ; set +a ; jq -n "$jq_query"'
}

if [ $# -gt 0 ]; then
  while [ $# -gt 0 ]; do
    case $1 in
      init )
        init router
        ;;
      apply )
        apply router
        ;;
      destroy )
        destroy router
        ;;
      vars )
        terraform_vars
        ;;
      * )
        echo "Unrecognized option: $1" 1>&2
        exit 1
        ;;
    esac
    shift
    exit
  done
fi

init router
apply router
