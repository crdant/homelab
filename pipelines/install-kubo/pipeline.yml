jobs:
- name: prepare-vsphere
  plan:
  - get: homelab
  - task: create-users
    file: homelab/pipelines/install-kubo/tasks/create-users/task.yml
    params:
      GOVC_INSECURE: 1
      GOVC_PASSWORD: ((vcenter_pwd))
      GOVC_URL: ((vcenter_host))
      GOVC_USERNAME: ((vcenter-username))
      KUBO_VC_USER: ((kubo-vcenter-user.username))
      KUBO_VC_PASSWORD: ((kubo-vcenter-user.password))
  - task: create-infrastructure
    file: homelab/pipelines/install-kubo/tasks/create-infrastructure/task.yml
    params:

- name: configure-director
  - aggregate:
    - do:
      - get: kubo-deployment-tarball
      - task: unpack-tarball
        config:
          image_resource:
            source:
              repository: czero/cflinuxfs2
            type: docker-image
          inputs:
          - name: kubo-deployment-tarball
            path: ""
          outputs:
          - name: kubo-deployment
            path: ""
          platform: linux
          run:
            args:
            - -c
            - tar -xvf kubo-deployment-tarball/*.tgz
            dir: ""
            path: bash
  - task: config-director
    file: homelab/pipelines/install-kubo/tasks/config-director/task.yml
    params:
      KUBO_ENV: ((kubo-environment))
      IAAS: ((iaas))
      VCENTER_HOST: ((vcenter-host))
      VCENTER_USER: ((kubo-vc-user.username))
      VCENTER_PASSWORD: ((kubo-vc-user.password))
      VCENTER_DATACENTER: ((vcenter-datacenter))
      VCENTER_CLUSTER: ((vcenter-cluster))
      VCENTER_RESOURCE_POOL: ((kubo-resource-pool))
      KUBO_DIRECTOR_NAME: ((kubo-director-name))
      KUBO_VM_FOLDER: ((kubo-vm-folder))
      KUBO_TEMPLATES: ((kubo-template-folder))
      KUBO_DISK_PATH: ((kubo-disk-path))
      KUBO_EPHEMERAL_STORE: ((kubo-ephemeral-store))
      NETWORK_NAME: ((network-name))
      EXCLUDED_RANGE: ((excluded-range))
      GATEWAY: ((network-gateway))
      DNS: ((network-dns))
  - task: config-pcf
    file: homelab/pipelines/install-kubo/tasks/config-pcf/task.yml
    params:
      PCF_API_URL: ((pcf-api-url))
      PCF_CLIENT_ID: ((pcf-client-id))
      PCF_UAA_URL: ((pcf-uaa-url))
      PCF_APPS_DOMAIN: ((pcf-apps-domain))
  - task: config-router
    file: homelab/pipelines/install-kubo/tasks/config-router/task.yml
    params:
      ROUTING_MODE: ((routing-mode))
      KUBERNETES_MASTER_HOST: ((k8s-master-host))
      KUBERNETES_MASTER_PORT: ((k8s-master-port))
      PCF_API_URL: ((pcf-api-url))
      PCF_CLIENT_ID: ((pcf-client-id))
      PCF_UAA_URL: ((pcf-uaa-url))
      PCF_APPS_DOMAIN: ((pcf-apps-domain))
      PCF_NATS_INTERNAL_IPS: ((pcf-nats-internal-ips))
      PCF_NATS_USERNAME: ((pcf-nats.username))
      PCF_NATS_USERNAME: ((pcf-nats.password))
      PCF_NATS_PORT: ((pcf-nats-port))
  - task: deploy-director
    file: homelab/pipelines/install-kubo/tasks/deploy-director/task.yml


- name: deploy-kubo
  plan:
    - get: homelab
    - task: config-k8s
      file: homelab/pipelines/install-kubo/tasks/config-kubo/task.yml
    - name: deploy-kubo
      file: homelab/pipelines/install-kubo/tasks/deploy-k8s/task.yml

resources:
  - name: homelab
    type: git
    source:
      uri: https://github.com/crdant/homelab.git
      branch: master
  - name: kubo-deployment-tarball
    type: gcs
    source:
      bucket: kubo-public
      uri: https://github.com/cloudfoundry-incubator/kubo-deployment.git
      regexp: kubo-deployment-latest.tgz

resource_types:
  - name: gcs
    type: docker-image
    source:
      repository: frodenas/gcs-resource
