jobs:

- name: configure-director
  plan:
  - get: homelab
  - get: kubo-odb-deployment
    trigger: true
  - get: environment-state
  - task: config-director
    file: homelab/pipelines/install-kubo/tasks/config-director/task.yml
    params:
      KUBO_SERVICE_NAME: k8s-container-runtime
      IAAS: ((iaas))
      VCENTER_HOST: ((vcenter-host))
      VCENTER_USER: ((kubo-vcenter-account.username))
      VCENTER_PASSWORD: ((kubo-vcenter-account.password))
      VCENTER_DATACENTER: ((vcenter-datacenter))
      VCENTER_CLUSTER: ((vcenter-cluster))
      VCENTER_RESOURCE_POOL: ((kubo-resource-pool))
      DIRECTOR_IP: ((director-ip))
      KUBO_DIRECTOR_NAME: ((kubo-director-name))
      KUBO_VM_FOLDER: ((kubo-vm-folder))
      KUBO_TEMPLATES: ((kubo-template-folder))
      KUBO_DISK_PATH: ((kubo-disk-path))
      KUBO_EPHEMERAL_STORE: ((kubo-ephemeral-store))
      VSPHERE_NETWORK: ((vsphere-network))
      NETWORK_CIDR: ((network-cidr))
      EXCLUDED_RANGE: ((excluded-range))
      GATEWAY: ((network-gateway))
      DNS: ((network-dns))
      GIT_USER: ((git-user))
      GIT_EMAIL: ((git-email))
  - task: config-router
    file: homelab/pipelines/install-kubo/tasks/config-router/task.yml
    params:
      ROUTING_MODE: ((routing-mode))
      KUBERNETES_MASTER_HOST: ((k8s-master-host))
      KUBERNETES_MASTER_PORT: ((k8s-master-port))
      PCF_API_URL: ((pcf-api-url))
      PCF_CLIENT_ID: ((pcf-routing-client.username))
      PCF_CLIENT_SECRET: ((pcf-routing-client.password))
      PCF_UAA_URL: ((pcf-uaa-url))
      PCF_APPS_DOMAIN: ((pcf-apps-domain))
      PCF_NATS_INTERNAL_IPS: ((pcf-nats-internal-ips))
      PCF_NATS_USERNAME: ((pcf-nats.username))
      PCF_NATS_PASSWORD: ((pcf-nats.password))
      PCF_NATS_PORT: ((pcf-nats-port))
      GIT_USER: ((git-user))
      GIT_EMAIL: ((git-email))
  - put: environment-state
    params:
      repository: completed-config

- name: deploy-director
  plan:
  - get: homelab
    passed:
    - configure-director
  - get: kubo-odb-deployment
    passed:
    - configure-director
  - get: environment-state
    passed:
    - configure-director
    trigger: true
  - task: deploy-director
    file: homelab/pipelines/install-kubo/tasks/deploy-director/task.yml
    params:
      GIT_USER: ((git-user))
      GIT_EMAIL: ((git-email))
  - put: environment-state
    params:
      repository: director-state

- name: deploy-broker
  plan:
  - get: homelab
    passed:
    - deploy-director
  - get: environment-state
    passed:
    - deploy-director
    trigger: true
  - get: kubo-odb-deployment
    passed:
    - deploy-director
  - get: odb-sdk
  - get: kubo-service-adapter
  - get: kubo-release
  - get: stemcell
  - task: config-odb
    file: homelab/pipelines/install-kubo/tasks/config-odb/task.yml
    params:
      DEPLOYMENT_NAME: ((environment-id))
      PCF_SYSTEM_DOMAIN: ((pcf-system-domain))
      PCF_USERNAME: ((kubo-pcf-account.username))
      PCF_PASSWORD: ((kubo-pcf-account.password))
  - task: prepare-odb
    file: homelab/pipelines/install-kubo/tasks/prepare-odb/task.yml
  - task: deploy-odb
    file: homelab/pipelines/install-kubo/tasks/deploy-odb/task.yml
    params:
      KUBO_SERVICE_NAME: k8s-container-runtime

- name: wipe-env
  plan:
  - get: homelab
    passed:
    - deploy-director
  - get: environment-state
    passed:
    - deploy-director
    trigger: true
  - task: wipe-env
    file: homelab/pipelines/install-kubo/tasks/wipe-env/task.yml
    params:
      KUBO_SERVICE_NAME: k8s-container-runtime

resources:
  - name: homelab
    type: git
    source:
      uri: https://github.com/crdant/homelab.git
      branch: master
  - name: kubo-odb-deployment
    type: git
    source:
      uri: git@github.com:pivotal-cf-experimental/kubo-odb-deployment.git
      private_key: ((git.private_key))
  - name: environment-state
    type: git
    source:
      uri: ((state-repository))
      branch: master
      private_key: ((git.private_key))
  - name: odb-sdk
    type: pivnet
    source:
      api_token: ((pivnet_token))
      product_slug: on-demand-services-sdk
      product_version: 0.16.1
  - name: kubo-release
    type: s3
    source:
      endpoint: https://storage.googleapis.com
      bucket: kubo-releases
      regexp: "kubo-release-(.*).tgz"
      access_key_id: ((gcs-access-key-id))
      secret_access_key: ((gcs-secret-access-key))
  - name: kubo-service-adapter
    type: s3
    source:
      endpoint: https://storage.googleapis.com
      bucket: kubo-releases
      regexp: "kubo-service-adapter-release-(.*).tgz"
      access_key_id: ((gcs-access-key-id))
      secret_access_key: ((gcs-secret-access-key))
  - name: stemcell
    type: curl
    source:
      url: https://s3.amazonaws.com/bosh-core-stemcells/vsphere/bosh-stemcell-3445.7-vsphere-esxi-ubuntu-trusty-go_agent.tgz
      filename: bosh-stemcell-3445.7-vsphere-esxi-ubuntu-trusty-go_agent.tgz

resource_types:
  - name: pivnet
    type: docker-image
    source:
      repository: pivotalcf/pivnet-resource
      tag: latest-final

  - name: curl
    type: docker-image
    source:
      repository: pivotalservices/concourse-curl-resource
      tag: latest
