<%
  require 'yaml'
  require 'ipaddr'

  vars = YAML::load_file("#{ENV["work_dir"]}/router_vars.yml")
  creds = YAML::load_file("#{ENV["key_dir"]}/router_creds.yml")

  class IPAddr
   def add(num)
     return self.clone.set(@addr + num, @family)
   end
   def to_cidr
    case @family
     when Socket::AF_INET
       n = IN4MASK ^ @mask_addr
       prefix = 32
     when Socket::AF_INET6
       n = IN6MASK ^ @mask_addr
       prefix = 128
     else
       raise AddressFamilyError, "unsupported address family"
     end
     while n > 0
       n >>= 1
       prefix -= 1
     end
     _to_string(@addr) + "/" + prefix.to_s
    end
  end

  esxi_addr = `dig +short #{vars["esxi_host"]}`.rstrip
  vsphere_port_addr = IPAddr.new(vars["vmware_cidr"]).succ.to_cidr
  bootstrap_port_addr = IPAddr.new(vars["bootstrap_cidr"]).succ.to_cidr
  pcf_port_addr = IPAddr.new(vars["pcf_cidr"]).succ.to_cidr
  infrastructure_port_addr = IPAddr.new(vars["infrastructure_cidr"]).succ.to_cidr
  deployment_port_addr = IPAddr.new(vars["deployment_cidr"]).succ.to_cidr
  services_port_addr = IPAddr.new(vars["services_cidr"]).succ.to_cidr
  dynamic_port_addr = IPAddr.new(vars["dynamic_cidr"]).succ.to_cidr
  container_port_addr = IPAddr.new(vars["container_cidr"]).succ.to_cidr
  management_port_addr =  IPAddr.new(vars["managment_cidr"]).succ.to_cidr

  vpn_start_addr = IPAddr.new(vars["vpn_cidr"]).add(38)
  vpn_end_addr = IPAddr.new(vars["vpn_cidr"]).add(50)

  local_router_addr = IPAddr.new(vars["local_cidr"]).to_s
  local_dhcp_start_addr = IPAddr.new(vars["local_cidr"]).add(38)
  local_dhcp_end_addr = IPAddr.new(vars["local_cidr"]).add(234)

  management_router_addr = IPAddr.new(vars["local_cidr"]).to_s
  management_dhcp_start_addr = IPAddr.new(vars["local_cidr"]).add(38)
  management_dhcp_end_addr = IPAddr.new(vars["local_cidr"]).add(234)

%>
firewall {
    all-ping enable
    broadcast-ping disable
    group {
      address-group pcf-routers {
          description "PCF HTTP/S Routers"
          <%- vars['router_static_ips'].each do |ip| -%>
            address <%= ip %>
          <%- end -%>
      }
      address-group pcf-tcp-routers {
          description "PCF TCP Routers"
          <%- vars['tcp_router_static_ips'].each do |ip| -%>
            address <%= ip %>
          <%- end -%>
      }
      address-group pcf-diego-brains {
          description "Diego Brains"
          <%- vars['brain_static_ips'].each do |ip| -%>
            address <%= ip %>
          <%- end -%>
      }
      network-group pcf-subnets {
            description "PCF Subnets"
            network <%= vars['infrastructure_cidr'] %>
            network <%= vars['deployment_cidr'] %>
            network <%= vars['services_cidr'] %>
            network <%= vars['dynamic_cidr'] %>
            network <%= vars['container_cidr'] %>
        }
    }
    ipv6-receive-redirects disable
    ipv6-src-route disable
    ip-src-route disable
    log-martians enable

    name VPN_INBOUND {
        default-action drop
        description "VPN subnet"
        rule 10 {
            action accept
            description "Allow established/related"
            log disable
            protocol all
            state {
                established enable
                invalid disable
                new disable
                related enable
            }
        }
        rule 20 {
            action drop
            description "Drop invalid state"
            log disable
            protocol all
            state {
                established disable
                invalid enable
                new disable
                related disable
            }
        }
        rule 30 {
            action accept
            description "Allow LAN access"
            destination {
                address <%= vars["local_cidr"] %>
            }
            log disable
            protocol all
        }
    }
    name VSPHERE_OUT {
        default-action drop
        description "Access from the vSphere environment"
        enable-default-log
        rule 10 {
            action accept
            description "Allow established/related"
            log disable
            protocol all
            state {
                established enable
                invalid disable
                new disable
                related enable
            }
        }
        rule 15 {
            action accept
            description "Allow invalid HTTPS packets to the ESXi API to work around handshake timeouts"
            destination {
                address <%= esxi_addr %>
                port 443
            }
            log disable
            protocol tcp
            state {
                established disable
                invalid enable
                new disable
                related disable
            }
        }
        rule 20 {
            action drop
            description "Drop invalid state"
            log disable
            protocol all
            state {
                established disable
                invalid enable
                new disable
                related disable
            }
        }
        rule 30 {
            action accept
            description "Allow Local Access to the vSphere environment"
            destination {
                address <%= vars["vmware_cidr"] %>
                port 22,80,443
            }
            log disable
            protocol tcp
            source {
                address <%= vars["local_cidr"] %>
            }
        }
        rule 40 {
            action accept
            description "Allow VPN Access to the vSphere environment"
            destination {
                address <%= vars["vmware_cidr"] %>
                port 22,80,443
            }
            log disable
            protocol tcp
            source {
                address <%= vars["vpn_cidr"] %>
            }
        }
        rule 50 {
            action accept
            description "Allow Bootstrap access to the vSphere environment"
            destination {
                address <%= vars["vmware_cidr"] %>
            }
            log disable
            protocol tcp
            source {
                address <%= vars["bootstrap_cidr"] %>
            }
        }
        rule 60 {
            action accept
            description "Allow PCF infrastructure access to the vSphere environment"
            destination {
                address <%= vars["vmware_cidr"] %>
            }
            log disable
            protocol tcp
            source {
                address <%= vars["infrastructure_cidr"] %>
            }
        }
    }
    name VSPHERE_IN {
        default-action drop
        description "Access from the vSphere environment"
        enable-default-log
        rule 10 {
            action accept
            description "Allow established/related"
            log disable
            protocol all
            state {
                established enable
                invalid disable
                new disable
                related enable
            }
        }
        rule 20 {
            action drop
            description "Drop invalid state"
            log disable
            protocol all
            state {
                established disable
                invalid enable
                new disable
                related disable
            }
        }
        rule 30 {
            action accept
            description "Allow outbound web traffic"
            destination {
                port 80,443
            }
            log disable
            protocol tcp
        }
        rule 40 {
            action accept
            description "Allow outbound DNS traffic"
            destination {
                port 53
            }
            log disable
            protocol tcp_udp
        }
        rule 50 {
            action accept
            description "Allow outbound NTP traffic"
            destination {
                port 123
            }
            log disable
            protocol udp
        }
    }
    name BOOTSTRAP_IN {
        default-action drop
        description "Access to the Elastic Runtime routers"
        enable-default-log
        rule 10 {
            action accept
            description "Allow established/related"
            log disable
            protocol all
            state {
                established enable
                invalid disable
                new disable
                related enable
            }
        }
        rule 15 {
            action accept
            description "Allow invalid HTTPS packets to the ESXi API to work around handshake timeouts"
            destination {
                address <%= esxi_addr %>
                port 443
            }
            log disable
            protocol tcp
            state {
                established disable
                invalid enable
                new disable
                related disable
            }
        }
        rule 20 {
            action drop
            description "Drop invalid state"
            log disable
            protocol all
            state {
                established disable
                invalid enable
                new disable
                related disable
            }
        }
        rule 30 {
            action accept
            description "Allow outbound web traffiC"
            destination {
                port 80,443
            }
            log disable
            protocol tcp
        }
        rule 40 {
            action accept
            description "Allow outbound DNS traffic"
            destination {
                port 53
            }
            log disable
            protocol tcp_udp
        }
        rule 50 {
            action accept
            description "Allow outbound NTP traffic"
            destination {
                port 123
            }
            log disable
            protocol udp
        }
    }
    name BOOTSTRAP_OUT {
        default-action drop
        description "Access to the Elastic Runtime routers"
        enable-default-log
        rule 10 {
            action accept
            description "Allow established/related"
            log disable
            protocol all
            state {
                established enable
                invalid disable
                new disable
                related enable
            }
        }
        rule 20 {
            action drop
            description "Drop invalid state"
            log disable
            protocol all
            state {
                established disable
                invalid enable
                new disable
                related disable
            }
        }
        rule 30 {
            action accept
            description "Allow local access to bootstrap environment"
            destination {
                address <%= vars["bootstrap_cidr"] %>
                port 22,443,6868,8443,8844,25555
            }
            log disable
            protocol tcp
            source {
                address <%= vars["local_cidr"] %>
            }
        }
        rule 35 {
            action accept
            description "Allow VPN access to bootstrap environment"
            destination {
                address <%= vars["bootstrap_cidr"] %>
                port 22,443,6868,8443,8844,25555
            }
            log disable
            protocol tcp
            source {
                address <%= vars["vpn_cidr"] %>
            }
        }
    }
    name PCF_IN {
        default-action drop
        description "Allow Pivotal Cloud Foundry to access the internet and other components"
        enable-default-log
        rule 10 {
            action accept
            description "Allow established/related"
            log disable
            protocol all
            state {
                established enable
                invalid disable
                new disable
                related enable
            }
        }
        rule 20 {
            action drop
            description "Drop invalid state"
            log disable
            protocol all
            state {
                established disable
                invalid enable
                new disable
                related disable
            }
        }
        rule 30 {
            action accept
            description "Allow PCF internal calls"
            destination {
                group {
                    network-group pcf-subnets
                }
            }
            log disable
            protocol tcp_udp
            source {
                group {
                    network-group pcf-subnets
                }
            }
        }
        rule 40 {
            action accept
            description "Allow PCF internal pings"
            destination {
                group {
                    network-group pcf-subnets
                }
            }
            log disable
            protocol icmp
            source {
                group {
                    network-group pcf-subnets
                }
            }
        }
        rule 50 {
            action accept
            description "Allow outbound web traffiC"
            destination {
                port 80,443
            }
            log disable
            protocol tcp
        }
        rule 60 {
            action accept
            description "Allow outbound DNS traffic"
            destination {
                port 53
            }
            log disable
            protocol tcp_udp
        }
        rule 70 {
            action accept
            description "Allow outbound NTP traffic"
            destination {
                port 123
            }
            log disable
            protocol udp
        }
    }
    name PCF_OUT {
        default-action drop
        description "Access ERT components to access the Internet and vSphere"
        enable-default-log
        rule 10 {
            action accept
            description "Allow established/related"
            log disable
            protocol all
            state {
                established enable
                invalid disable
                new disable
                related enable
            }
        }
        rule 20 {
            action drop
            description "Drop invalid state"
            log disable
            protocol all
            state {
                established disable
                invalid enable
                new disable
                related disable
            }
        }
        rule 30 {
            action accept
            description "Allow PCF internal calls"
            destination {
                group {
                    network-group pcf-subnets
                }
            }
            log disable
            protocol tcp_udp
            source {
                group {
                    network-group pcf-subnets
                }
            }
        }
        rule 40 {
            action accept
            description "Allow PCF internal pings"
            destination {
                group {
                    network-group pcf-subnets
                }
            }
            log disable
            protocol icmp
            source {
                group {
                    network-group pcf-subnets
                }
            }
        }
        rule 50 {
            action accept
            description "Allow access to PCF web APIs and routers"
            destination {
                group {
                    address-group pcf-routers
                }
                port 80,443
            }
            log disable
            protocol tcp
        }
        rule 60 {
            action accept
            description "Allow access to TCP routers"
            destination {
                group {
                    address-group pcf-tcp-routers
                }
                port 1024-65535
            }
            log disable
            protocol tcp_udp
        }
        rule 70 {
            action accept
            description "Allow SSH access to applications"
            destination {
                group {
                    address-group pcf-diego-brains
                }
                port 22
            }
            log disable
            protocol tcp
        }
    }
    name WAN_IN {
        default-action drop
        description "WAN to internal"
        rule 10 {
            action accept
            description "Allow established/related"
            state {
                established enable
                related enable
            }
        }
        rule 20 {
            action drop
            description "Drop invalid state"
            state {
                invalid enable
            }
        }
    }
    name WAN_LOCAL {
        default-action drop
        description "WAN to router"
        rule 10 {
            action accept
            description "Allow established/related"
            state {
                established enable
                related enable
            }
        }
        rule 20 {
            action drop
            description "Drop invalid state"
            state {
                invalid enable
            }
        }
        rule 30 {
            action accept
            description "Allow IKE for VPN Server"
            destination {
                port 500
            }
            log disable
            protocol udp
        }
        rule 40 {
            action accept
            description "Allow L2TP for VPN Server"
            destination {
                port 1701
            }
            log disable
            protocol udp
        }
        rule 50 {
            action accept
            description "Allow ESP for VPN Server"
            log disable
            protocol esp
        }
        rule 60 {
            action accept
            description "Allow NAT Traversal for VPN Server"
            destination {
                port 4500
            }
            log disable
            protocol udp
        }
    }
    receive-redirects disable
    send-redirects enable
    source-validation disable
    syn-cookies enable
}
interfaces {
    ethernet eth0 {
        address dhcp
        description Internet
        duplex auto
        firewall {
            in {
                name WAN_IN
            }
            local {
                name WAN_LOCAL
            }
        }
        speed auto
    }
    ethernet eth1 {
        address <%= vsphere_port_addr %>
        description "vSphere Management Network"
        duplex auto
        firewall {
            in {
                name VSPHERE_IN
            }
            out {
                name VSPHERE_OUT
            }
        }
        speed auto
    }
    ethernet eth2 {
        address <%= bootstrap_port_addr %>
        description "Bootstrap Network"
        duplex auto
        firewall {
            in {
                name BOOTSTRAP_IN
            }
            out {
                name BOOTSTRAP_OUT
            }
        }
        speed auto
    }
    ethernet eth3 {
        address <%= pcf_port_addr %>
        address <%= infrastructure_port_addr %>
        address <%= deployment_port_addr %>
        address <%= services_port_addr %>
        address <%= dynamic_port_addr %>
        address <%= container_port_addr %>
        description "PCF Networks"
        duplex auto
        firewall {
            in {
                name PCF_IN
            }
            out {
                name PCF_OUT
            }
        }
        speed auto
    }
    ethernet eth4 {
        description Local
        duplex auto
        speed auto
    }
    loopback lo {
    }
    switch switch0 {
        address <%= management_port_addr %>
        description Local
        firewall {

        }
        mtu 1500
        switch-port {
            interface eth4 {
            }
            vlan-aware disable
        }
    }
}
service {
    dhcp-server {
        disabled false
        hostfile-update disable
        shared-network-name LAN1 {
            authoritative enable
            subnet <%= vars["local_cidr"] %> {
                default-router <%= local_router_addr %>
                dns-server <%= local_router_addr %>
                lease 86400
                start <%= local_dhcp_start_addr %>  {
                    stop <%= local_dhcp_end_addr %>
                }
            }
        }
        shared-network-name LAN2 {
            authoritative enable
            subnet <%= vars["management_cidr"] {
                default-router <%= management_router_addr %>
                dns-server <%= management_router_addr %>
                lease 86400
                start <%= management_dhcp_start_addr %> {
                    stop <%= management_dhcp_end_addr %>
                }
            }
        }
        use-dnsmasq disable
    }
    dns {
        forwarding {
            cache-size 150
            listen-on eth1
            listen-on switch0
            listen-on eth2
            listen-on eth3
        }
    }
    gui {
        http-port 80
        https-port 443
        older-ciphers enable
    }
    nat {
        rule 5010 {
            description "masquerade for WAN"
            outbound-interface eth0
            type masquerade
        }
    }
    ssh {
        port 22
        protocol-version v2
    }
}
system {
    host-name ubnt
    login {
        user ubnt {
            authentication {
                encrypted-password $6$Py7QMd9.9Osw$mmmSaJ1owmC1J757HELrIHspzI8.FrLDIHdhEOYFOGJ2T23lYHXj6442xbhWMfdc2vs6.w/1cx5C7Ve.XGI.F/
                public-keys <%= vars["router_user"] %>@<%= vars["router_host"] %> {
                    <%= vars["ssh_public_key"] %>
                }
            }
            level admin
        }
    }
    ntp {
        server 0.ubnt.pool.ntp.org {
        }
        server 1.ubnt.pool.ntp.org {
        }
        server 2.ubnt.pool.ntp.org {
        }
        server 3.ubnt.pool.ntp.org {
        }
    }
    syslog {
        global {
            facility all {
                level notice
            }
            facility protocols {
                level debug
            }
        }
    }
    time-zone UTC
}
vpn {
    ipsec {
        auto-firewall-nat-exclude enable
        ipsec-interfaces {
            interface eth0
        }
        nat-traversal enable
    }
    l2tp {
        remote-access {
            authentication {
                local-users {
                    username crdant {
                        password wireworm-checker-voodoo-unpack
                    }
                }
                mode local
            }
            client-ip-pool {
                start <%= vpn_start_addr %>
                stop <%= vpn_end_addr %>
            }
            dhcp-interface eth0
            dns-servers {
                server-1 <%= vars["dns_servers"][0] %>
                server-2 <%= vars["dns_servers"][1] %>
            }
            ipsec-settings {
                authentication {
                    mode pre-shared-secret
                    pre-shared-secret <%= creds["vpn_psk"] %>
                }
                ike-lifetime 3600
            }
            mtu 1024
        }
    }
}


/* Warning: Do not remove the following line. */
/* === vyatta-config-version: "config-management@1:conntrack@1:cron@1:dhcp-relay@1:dhcp-server@4:firewall@5:ipsec@5:nat@3:qos@1:quagga@2:system@4:ubnt-pptp@1:ubnt-util@1:vrrp@1:webgui@1:webproxy@1:zone-policy@1" === */
/* Release version: v1.9.1.1.4977602.170427.0113 */
